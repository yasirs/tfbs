install.packages("data.table")
install.packages("ggplot2")
install.packages("ggrepel")
install.packages("Seurat")
install.packages("pacman")
pacman::p_install("DESeq2")
install.packages("BiocManager")
pacman::p_install("DESeq2")
library(DESeq2)
a = "winvn.gif
winvnsm.gif
orbiters-logo.gif
KSC-logosmall.gif
ksclogo-medium.gif
WORLD-logosmall.gif
ksclogosmall.gif
KSC-95EC-0868.gif
KSC-95EC-0918.gif
NASA-logosmall.gif
bluemarb.gif
launchpalms-small.gif
launchmedium.gif
launch-logo.gif
count.gif
construct.gif
columbia-logo.gif
endeavour.gif
footprint-small.gif
sts-71-patch-small.gif
sts-78-patch-small.gif
USA-logosmall.gif
livevideo.gif
MOSAIC-logosmall.gif
srb_16-small.gif
srb_mod_compare_3-small.gif
wvsmall.gif
wvnguide.gif"
strsplit(a)
strsplit(a, split = "\n")
strsplit(a, split = "\n\n")
aa = strsplit(a, split = "\n\n")[0]
b = "    70HC314.GIF
KSC-95EC-0868.gif
KSC-95EC-0918.gif
KSC-logosmall.gif
MOSAIC-logosmall.gif
NASA-logosmall.gif
USA-logosmall.gif
WORLD-logosmall.gif
bluemarb.gif
columbia-logo.gif
construct.gif
count.gif
endeavour.gif
footprint-small.gif
ksclogo-medium.gif
ksclogosmall.gif
launch-logo.gif
launchmedium.gif
launchpalms-small.gif
livevideo.gif
orbiters-logo.gif
srb_16-small.gif
srb_mod_compare_3-small.gif
sts-71-patch-small.gif
sts-78-patch-small.gif
winvn.gif
winvnsm.gif
wvnguide.gif
wvsmall.gif"
bb = strsplit(b, split = "\n\n")[0]
aa
aa = strsplit(a, split = "\n\n")[1]
bb = strsplit(b, split = "\n\n")[1]
aa
bb
a
b
b = "    70HC314.GIF
KSC-95EC-0868.gif
KSC-95EC-0918.gif
KSC-logosmall.gif
MOSAIC-logosmall.gif
NASA-logosmall.gif
USA-logosmall.gif
WORLD-logosmall.gif
bluemarb.gif
columbia-logo.gif
construct.gif
count.gif
endeavour.gif
footprint-small.gif
ksclogo-medium.gif
ksclogosmall.gif
launch-logo.gif
launchmedium.gif
launchpalms-small.gif
livevideo.gif
orbiters-logo.gif
srb_16-small.gif
srb_mod_compare_3-small.gif
sts-71-patch-small.gif
sts-78-patch-small.gif
winvn.gif
winvnsm.gif
wvnguide.gif
wvsmall.gif"
b
bb
substr(bb,1, 7)
substr(b,1, 7)
substr(b,1, 5)
substr(b,1, 4)
sub(pattern = "    ", replacement = "", x = b)
gsub(pattern = "    ", replacement = "", x = b)
b = gsub(pattern = "    ", replacement = "", x = b)
bb = strsplit(b, split = "\n\n")[1]
bb
b
a
bb = strsplit(b, split = "\n\n")[1]
bb
bb = strsplit(b, split = "\n\n")[[1]]
aa = strsplit(a, split = "\n\n")[[1]]
aa
bb
setdiff(bb,aa)
setdiff(aa,bb)
getwd()
perf_data <- read.table("../Downloads/shuffled_grid_search3.txt")
perf_data <- read.table("../Downloads/shuffled_grid_search3.txt", sep = "\t")
perf_data <- read.table("../Downloads/shuffled_grid_search3.txt", sep = "\t", header = T, stringsAsFactors = F)
head(perf_data)
names(perf_data)
perf_data <- read.table("../Downloads/shuffled_grid_search3.txt", header = T, stringsAsFactors = F)
names(perf_data)
head(perf_data)
perf_data <- perf_data[-1,]
head(perf_data)
library(ggplot2)
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=cascade_depth)) + geom_point()
for (ii in c(1:ncol(perf_data))) {
perf_data[,ii] <- as.numeric(perf_data[,ii])
}
library(ggplot2)
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=cascade_depth)) + geom_point()
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point()
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point()
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line()
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line(aes(group=tree_depth))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line(aes(linetype=tree_depth))
group=tree_depth)) + geom_point() + geom_line(aes(linetype=as.numeric(tree_depth))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line(aes(linetype=as.numeric(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line(aes(linetype=as.numeric(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth),
group=tree_depth)) + geom_point() + geom_line(aes(linetype=as.factor(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line(aes(linetype=as.factor(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line(aes(group = as.factor(tree_depth),linetype=as.factor(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test)) + geom_point() + geom_line(aes(group = as.factor(tree_depth),linetype=as.factor(tree_depth)))
ggplot(data = perf_data, aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
ggplot(data = perf_data[nu=.05], aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
library(data.table)
perf_data <- as.data.table(perf_data)
ggplot(data = perf_data[nu=.05], aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
ggplot(data = perf_data[nu==.05], aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
ggplot(data = perf_data[nu==.05, tree_depth==2], aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
ggplot(data = perf_data[nu==.05][ tree_depth==2], aes(x = oversampling_amount, y = error_test, color=as.factor(cascade_depth))) + geom_point() + geom_line()
ggplot(data = perf_data[nu==.05][ tree_depth==2], aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) + geom_point() + geom_line()
ggplot(data = perf_data[nu==.05], aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth)))
ggplot(data = perf_data[nu==.05], aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth))
for (ii in c(1:ncol(perf_data))) {
perf_data[,ii] <- as.numeric(perf_data[,ii])
if (! grepl(pattern = "error", x = names(perf_data)[ii]))
perf_data[,ii] <- as.factor(perf_data)
}
perf_data <- read.table("../Downloads/shuffled_grid_search3.txt", header = T, stringsAsFactors = F)
perf_data <- perf_data[-1,]
for (ii in c(1:ncol(perf_data))) {
perf_data[,ii] <- as.numeric(perf_data[,ii])
if (! grepl(pattern = "error", x = names(perf_data)[ii]))
perf_data[,ii] <- as.factor(perf_data[,ii])
}
library(ggplot2)
library(data.table)
perf_data <- as.data.table(perf_data)
ggplot(data = perf_data[nu==.05], aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth))
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) + facet_grid(~ nu)
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) + facet_grid(nu)
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=as.factor(oversampling_amount))) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) + facet_grid(nu ~ .)
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) + facet_grid(nu ~ .)
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) + facet_grid(nu ~ .) +
theme_classic()
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ nu) +
theme_classic()
tiff(filename = "test_error.tiff", width = 5, height = 2, units = "in", res=600, compression = "zip")
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ nu) +
theme_classic()
dev.off()
perf_data$Nu = paste0("nu=", perf_data$nu)
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
tiff(filename = "test_error.tiff", width = 5, height = 2, units = "in", res=600, compression = "zip")
ggplot(data = perf_data, aes(x = cascade_depth, y = error_test, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
dev.off()
ggplot(data = perf_data, aes(x = cascade_depth, y = error_train, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
tiff(filename = "train_error.tiff", width = 5, height = 2, units = "in", res=600, compression = "zip")
ggplot(data = perf_data, aes(x = cascade_depth, y = error_train, color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
dev.off()
ggplot(data = perf_data, aes(x = cascade_depth, y = training_time.sec., color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
perf_data <- read.table("shuffled_grid_search3.txt", header = T, stringsAsFactors = F)
perf_data <- perf_data[-1,]
for (ii in c(1:ncol(perf_data))) {
perf_data[,ii] <- as.numeric(perf_data[,ii])
if (! grepl(pattern = "(error)|(time)", x = names(perf_data)[ii]))
perf_data[,ii] <- as.factor(perf_data[,ii])
}
library(ggplot2)
library(data.table)
perf_data <- as.data.table(perf_data)
perf_data$Nu = paste0("nu=", perf_data$nu)
ggplot(data = perf_data, aes(x = cascade_depth, y = training_time.sec., color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic()
ggplot(data = perf_data, aes(x = cascade_depth, y = training_time.sec., color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic() + scale_x_log10()
ggplot(data = perf_data, aes(x = cascade_depth, y = training_time.sec., color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic() + scale_y_log10()
tiff(filename = "training_time.tiff", width = 5, height = 2, units = "in", res=600, compression = "zip")
ggplot(data = perf_data, aes(x = cascade_depth, y = training_time.sec., color=oversampling_amount)) +
geom_point() + geom_line(aes(group = interaction(oversampling_amount, tree_depth), linetype=tree_depth)) +
facet_grid(~ Nu) +
theme_classic() + scale_y_log10()
dev.off()
setwd("../Google Drive/work/kshitiz/farm-animals/data/countmatrices/")
load("Human.Rdata")
load("Cow.Rdata")
load("Human.Rdata")
human_mmat = mmat
load("Cow.Rdata")
cow_mmat = mmat
head(rownames(mmat))
head(colnames(mmat))
head(colnames(human_mmat))
head(colnames(cow_mmat))
human_mmat[,"ENSG00000026508"]
human_mmat[,"ENSG00000026508"]
cow_mmat[, "ENSBTAG00000011578"]
sort(cow_mmat[, "ENSBTAG00000011578"], decreasing =
T)
sort(human_mmat[,"ENSG00000026508"], decreasing = T) - sort(cow_mmat[, "ENSBTAG00000011578"], decreasing = T)
head(sort(human_mmat[,"ENSG00000026508"], decreasing = T))
head(sort(human_mmat[,"ENSG00000026508"], decreasing = T))
head(sort(cow_mmat[, "ENSBTAG00000011578"], decreasing = T))
head(sort(human_mmat[,"ENSG00000026508"], decreasing = T) - sort(cow_mmat[, "ENSBTAG00000011578"], decreasing = T))
head(sort(human_mmat[,"ENSG00000026508"] - cow_mmat[, "ENSBTAG00000011578"], decreasing = T))
head(sort(human_mmat[,"ENSG00000026508"] - cow_mmat[, "ENSBTAG00000011578"], decreasing = F, ))
all(rownames(human_mmat) == rownames(cow_mmat))
cd44_counts = data.frame(TF = rownames(human_mmat), human = human_mmat[,"ENSG00000026508"], cow = cow_mmat[, "ENSBTAG00000011578"])
openxlsx::write.xlsx(x = cd44_counts, asTable = T, file = "CD44_bindingsite_counts.xlsx")
getwd()
